@model Website.Models.CreateEventModel

﻿@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">-->
    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css">-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/dropDownMenu.css">
    <link rel="stylesheet" type="text/css" href="~/Content/formLayout.css"/>
    <title>CreateEvent</title>

    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
       
    </style>
</head>

<body>
    <div class="navbar">
        <a href="~/Home/Home"> Home </a>
        <a href="~/Home/CreateEvent">Add Event</a>
        <a href="~/Home/CreateRSO">Add RSO</a>
        <a href="~/Home/CreateUniversity">Add University</a>
        <div class="dropdown">
            <button class="dropbtn" onclick="myFunction()">
                Select University
                <i class="fa fa-caret-down"></i>
            </button>
            <div class="dropdown-content" id="myDropdown">
                <a href="#">Link 1</a>
                <a href="#">Link 2</a>
                <a href="#">Link 3</a>
            </div>
        </div>
    </div>
    <div class="form-style-2">
        <div class="form-style-2-heading">Provide the Event Information</div>
        @using (Html.BeginForm("AddEvent", "Home"))
        {
            <label for="field1"><span>@Html.LabelFor(m => m.Name)</span>@Html.TextBoxFor(m => m.Name, new { @class = "input-field" })</label>
            <label><span>@Html.LabelFor(m => m.ContactEmail)</span>@Html.TextBoxFor(m => m.ContactEmail, new { @class = "input-field" })</label>
            <label><span>@Html.LabelFor(m => m.ContactPhone)</span>@Html.TextBoxFor(m => m.ContactPhone, new { @class = "input-field" })</label>
            <label><span>@Html.LabelFor(m => m.EventTypes)</span>@Html.DropDownListFor(m => m.SelectedEventType, new SelectList(Model.EventTypes, "Id", "Name"), "-- Select Event Type --", new { @class = "select-field" })</label>
            <label for="field5"><span>@Html.LabelFor(m => m.EventCategories)</span>@Html.DropDownListFor(m => m.SelectedCategory, new SelectList(Model.EventCategories, "Id", "Name"), "-- Select Event Category --", new { @class = "select-field" })</label>
            <label for="field6"><span>@Html.LabelFor(m => m.Universities)</span>@Html.DropDownListFor(m => m.SelectedUniversity, new SelectList(Model.Universities, "Id", "Name"), "-- Select University --", new { @class = "select-field" })</label>
            <label for="field5"><span>@Html.LabelFor(m => m.Description)</span>@Html.TextAreaFor(m => m.Description, new { @rows = "5", cols = "50" })</label>
            <label><span> </span><input type="submit" value="Submit" /></label>
        }
    </div>
    <div id="map" height="460px" width="400px"></div>
    <div id="form">
        <table>
            <tr><td></td><td><input type='button' value='Save' onclick='saveData()' /></td></tr>
        </table>
    </div>


    <script>
        var map;
        var marker;
        var infowindow;
        var messagewindow;

        // Note: This example requires that you consent to location sharing when
        // prompted by your browser. If you see the error "The Geolocation service
        // failed.", it means you probably did not give permission for the browser to
        // locate you.
        var map, infoWindow;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 10
            });
            infoWindow = new google.maps.InfoWindow;

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    infoWindow.setPosition(pos);
                    infoWindow.setContent('Location found.');
                    infoWindow.open(map);
                    map.setCenter(pos);
                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                'Error: The Geolocation service failed.' :
                'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }

        function saveData() {
            var name = escape(document.getElementById('name').value);

            var latlng = marker.getPosition();
            var url = '&lat=' + latlng.lat() + '&lng=' + latlng.lng();

            downloadUrl(url, function (data, responseCode) {

                if (responseCode == 200 && data.length <= 1) {
                    infowindow.close();
                    messagewindow.open(map, marker);
                }
            });
        }

        function downloadUrl(url, callback) {
            var request = window.ActiveXObject ?
                new ActiveXObject('Microsoft.XMLHTTP') :
                new XMLHttpRequest;

            request.onreadystatechange = function () {
                if (request.readyState == 4) {
                    request.onreadystatechange = doNothing;
                    callback(request.responseText, request.status);
                }
            };

            request.open('GET', url, true);
            request.send(null);
        }

        function doNothing() {
        }

    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB1rCahYMg_sbFtaUZbTz4a6rFTRdF-oXc&callback=initMap">
    </script>


</body>

</html>