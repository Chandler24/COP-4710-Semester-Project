@model Website.Models.HomeModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Events Page</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"> -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/dropDownMenu.css">

    <!-- You can use Open Graph tags to customize link previews.
    Learn more: https://developers.facebook.com/docs/sharing/webmasters -->
    <meta property="og:url" content="~/Home/Home" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Events Page" />
    <meta property="og:description" content="Events page for university events" />

    <style>
        /*Event styling*/

        .tab-content {
            margin: 50px 0 20px 0;
        }

        .media > .pull-left {
            margin-right: 29px;
        }

        .media .dateEl {
            display: inline-block;
            text-align: center;
            background: #f9f9f9;
            padding: 18px 0 25px 0;
            color: #173d51;
            font-size: 16px;
            font-weight: 700;
            width: 113px;
            text-transform: uppercase;
        }

            .media .dateEl em {
                display: block;
                color: #662d91;
                font-size: 42px;
                line-height: 1;
                margin-bottom: 5px;
                font-style: normal;
            }

        .media .media-heading a {
            color: #022235;
            font-size: 21px;
            text-transform: uppercase;
        }

        .media .meta-data {
            margin: 0 0 7px 0;
        }

        .media .longDate, .media .timeEl {
            display: inline-block;
            font-size: 14px;
            line-height: 14px;
            font-family: 'PT Sans Narrow', sans-serif;
            font-weight: 700;
            color: #636465;
            text-transform: uppercase;
            min-height: 16px;
        }

        .media .longDate {
            background: transparent url(../images/ico-calendar.png) no-repeat left top;
            padding: 0 10px 0 24px;
            border-right: 1px solid #eb5b4c;
            margin-right: 3px;
        }

        #tab1.tab-pane .media .longDate {
            border-right: none;
        }

        * {
            padding: 0;
            margin: 0;
            list-style: none;
        }

        /*Star Rating system*/
        body {
            padding: 1em;
        }

        input {
            position: absolute;
            top: -2em;
            clip: rect(0,0,0,0);
        }

        .score {
            unicode-bidi: bidi-override;
            direction: rtl;
            text-align: left;
            border: 0;
            font-size: 0;
        }

            .score legend {
                overflow: hidden;
                height: 0;
            }

            .score label {
                font-size: 32px;
                font-size: 2rem;
                line-height: 32px;
                line-height: 2rem;
                display: inline-block;
                position: relative;
                text-align: center;
                width: 1.2em;
                height: 1em;
                overflow: hidden;
                text-indent: 100%;
            }

                .score label:before {
                    content: "☆";
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    text-indent: 0;
                    line-height: 1em;
                    color: #aaa;
                }

                .score label:hover:before,
                .score label:hover ~ label:before,
                .score input:checked ~ label:before {
                    content: "★";
                    color: #ffbb04;
                }

                .score label:active {
                    position: relative;
                    top: 1px;
                }
    </style>
</head>

<body>

    <div class="navbar">
        <a href="~/Home/Home"> Home </a>
        @if ((int)Session["UserType"] == 1)
        {
            <a href="~/Home/CreateEvent">Add Event</a>
            <a href="~/Home/CreateRSO">Add RSO</a>
            <a href="~/Home/CreateUniversity">Add University</a>
        }
        else if ((int)Session["UserType"] == 2)
        {
            <a href="~/Home/JoinRSO">Join RSO</a>
            <a href="~/Home/CreateEvent">Add Event</a>
            <a href="~/Home/CreateUniversity">Add University</a>
        }
        else if ((int)Session["UserType"] == 3)
        {
            <a href="~/Home/JoinRSO">Join RSO</a>
            <a href="~/Home/CreateEvent">Add Event</a>
        }
        <div class="dropdown">
            <button class="dropbtn" onclick="myFunction()">
                Select University
                <i class="fa fa-caret-down"></i>
            </button>
            <div class="dropdown-content" id="myDropdown">
                <a href="#">Link 1</a>
                <a href="#">Link 2</a>
                <a href="#">Link 3</a>
            </div>
        </div>
    </div>
    <div class="tab-content">
        <div class="tab-pane fade in active" id="tab1">
            <div class="row">
                <div class="col-md-6">
                    <div class="media">
                        <label><span><strong>@Html.LabelFor(m => m.EventTypes)</strong></span>
                        <br />
                        @Html.DropDownListFor(m => m.SelectedEventType, new SelectList(Model.EventTypes, "Id", "Name"), "All Events", new { @class = "select-field", @style = "margin-top: 10px;width: 300px;height: 30px;" })</label>
                        <br />
                        <br />
                    <div class="media-body" id="eventsList">
                        @{ Html.RenderPartial("_Events", Model); }
                    </div><!-- / media-body -->
                    </div><!-- / media -->
                </div>
            </div>
        </div>
    </div> 
    
    <script>
        /* When the user clicks on the button,
        toggle between hiding and showing the dropdown content */
        function myFunction() {
            document.getElementById("myDropdown").classList.toggle("show");
        }


        $(document).on('click', '.comment-button', function () {
            var commentBoxId = 'CommentBox-' + $(this).attr('data-eventid');
            var postCommentButtonId = 'PostComment-' + $(this).attr('data-eventid');
            document.getElementById(commentBoxId).style.display = "block";
            document.getElementById(postCommentButtonId).style.display = "block";
        })

        $(document).on('click', '.post-comment-button', function () {
            var eventId = $(this).attr('data-eventid');
            var comment = $('#CommentBox-' + eventId).val();

            var commentBoxId = 'CommentBox-' + eventId;
            var postCommentButtonId = 'PostComment-' + eventId;
            
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddComment", "Home")',
                data: {
                    eventId: eventId,
                    comment: comment
                }
            }).done(function (result) {
                if (result == "True") {
                    document.getElementById(commentBoxId).style.display = "none";
                    document.getElementById(postCommentButtonId).style.display = "none";
                }
                else alert("There was an error adding the comment.");
            })
        })

        $(document).on('click', '.view-comments', 'click', function () {
            var eventId = $(this).attr('data-eventid');
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetEventComments", "Home")',
                data: {
                    eventId: eventId
                }
            }).done(function (result) {
                var commentHtml = '';
                var eventId = '';

                if (result.length > 0) {
                    eventId = result[0].EventId;

                    for (i = 0; i < result.length; i++) {
                        var comment = result[i].Comment;
                        var name = result[i].Name;
                        var commentId = result[i].CommentId;

                        // Wrapper
                        commentHtml += '<div class="row" style="margin-left:113px; margin-bottom:10px; margin-top:10px;">';

                        // Name
                        commentHtml += '<div class="col-md-10">';
                        commentHtml += '<strong>' + name + '</strong>';
                        commentHtml += '</div>';

                        // Comment 
                        commentHtml += '<div class="col-md-10" id="viewComment-' + commentId + '">';
                        commentHtml += '<p id="commentDisplay-' + commentId + '">' + comment + '</p>';
                        commentHtml += '</div>';

                        // Hidden comment for editing
                        commentHtml += '<div class="col-md-10" style="display:none" id="editCommentBox-' + commentId + '">';
                        commentHtml += '<textarea id="editCommentTextArea-' + commentId + '" style="width:400px; height:100px;" type="text" value="' + comment + '">' + comment + '</textarea>';
                        commentHtml += '<br /><button class="saveEditedComment" data-commentId="' + commentId + '">Save Edit</button>'
                        commentHtml += '</div>';

                        // Edit / Delete
                        commentHtml += '<button style="margin-right:10px;" id="editComment-' + commentId + '" class="editcomment" data-commentId="' + commentId + '">Edit</button>'
                        commentHtml += '<button class="deletecomment" id="deleteComment-' + commentId + '" data-commentId="' + commentId + '">Delete</button>'

                        // Close the wrapper 
                        commentHtml += '</div>';
                    }

                    document.getElementById('comments-' + eventId).innerHTML = commentHtml;
                    document.getElementById('commentsWrapper-' + eventId).style.display = "block";
                }
                else {
                    alert('There are currently no comments for this event!');
                }
            })
        })

        $(document).on('click', '.collapse-comments', function () {
            var eventId = $(this).attr('data-eventid');
            var commentWrapperId = 'commentsWrapper-' + eventId;
            document.getElementById(commentWrapperId).style.display = "none";
        })

        $(document).on('click', '.editcomment', function (e) {
            e.preventDefault();
            var commentId = $(this).attr('data-commentId');
            $('#viewComment-' + commentId).css('display', 'none');
            $('#editCommentBox-' + commentId).css('display', 'block');
            $('#editComment-' + commentId).css('display', 'none');
            $('#deleteComment-' + commentId).css('display', 'none');
        })

        $(document).on('click', '.saveEditedComment', function (e) {
            e.preventDefault();
            var commentId = $(this).attr('data-commentId');
            var editedComment = $('#editCommentTextArea-' + commentId).val();
            document.getElementById('commentDisplay-' + commentId).innerText = editedComment;
            $.ajax({
                type: "POST",
                url: '@Url.Action("EditComment", "Home")',
                data: {
                    commentId: commentId,
                    editedComment: editedComment
                }
            }).done(function (result) {
                $('#viewComment-' + commentId).css('display', 'block');
                $('#editCommentBox-' + commentId).css('display', 'none');
                $('#editComment-' + commentId).css('display', 'block');
                $('#deleteComment-' + commentId).css('display', 'block');
            })
        })

        $(document).on('click', '.deletecomment', function (e) {
            e.preventDefault();
            var commentId = $(this).attr('data-commentId');
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteComment", "Home")',
                data: {
                    commentId: commentId
                }
            }).done(function (result) {
                
            })
        })


        $('#SelectedEventType').on('change', function () {
            var eventType = $(this).val();
            if (eventType == "")
                eventType = 0;

            $.ajax({
                type: "POST",
                url: '@Url.Action("FilterEvents", "Home")',
                data: {
                    eventType: eventType
                }
            }).done(function (result) {
                document.getElementById('eventsList').innerHTML = result;
            })
        })
    </script>        
    </body>
</html>
